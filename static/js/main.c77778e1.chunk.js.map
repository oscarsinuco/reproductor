{"version":3,"sources":["redux/store/index.js","pages/reproductor/reproductor.js","components/artista/artista.js","components/cancionFav/cancionFav.js","pages/home/home.js","App.js","serviceWorker.js","index.js"],"names":["value","canciones","generos","cancionActual","reducers","setCancion","cancion","setCanciones","can","getGeneros","getCanciones","getCancionActual","setCancionActual","i","nuevaCancion","id","length","Reproducir","props","getCancion","getTime","event","setState","duration","target","currentTime","toFixed","state","durationFinal","pause","store","play","update","audio","document","querySelector","isPlaying","cache","Math","round","random","addEventListener","e","this","className","to","title","slice","src","album","cover_big","alt","onTimeUpdate","preview","replace","controls","hidden","artist","name","type","min","max","onChange","trunc","onClick","React","Component","Artista","img","Cancion","url","data","cover_medium","Home","categorias","fetch","then","response","json","gen","res","console","log","tracks","catch","err","alert","buscador","onkeyup","keyCode","search","blur","resultados","window","scroll","getBoundingClientRect","top","params","slidesPerView","spaceBetween","freeMode","loop","auto","breakpoints","320","600","1000","artistas","map","el","key","picture_medium","autoComplete","placeholder","App","path","component","Boolean","location","hostname","match","createStore","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.c77778e1.chunk.js","sourcesContent":["import { createStore } from \"redux\";\n\nlet value;\nlet canciones;\nlet generos;\nlet cancionActual;\n\nconst reducers = () => {\n  return {};\n};\nconst getCancion = () => {\n  return value;\n};\nconst setCancion = (cancion) => {\n  value = cancion.cancion;\n  cancionActual = cancion;\n};\n\nconst setCanciones = (can) => {\n  canciones = can;\n};\n\nconst getGeneros = () => {\n  return generos;\n};\n\nconst setGeneros = (gen) => {\n  generos = gen;\n};\n\nconst getCanciones = () => {\n  return canciones;\n};\n\nconst getCancionActual = () => {\n  return cancionActual;\n};\n\nconst setCancionActual = (i) => {\n  if (i > 0) {\n    //Avanzando\n    let nuevaCancion = cancionActual.id + i;\n    if (nuevaCancion >= 0 && nuevaCancion !== canciones.length) {\n      cancionActual.id = nuevaCancion;\n      cancionActual.cancion = canciones[cancionActual.id];\n    }\n    if (nuevaCancion === canciones.length) {\n      cancionActual.id = 0;\n      cancionActual.cancion = canciones[cancionActual.id];\n    }\n  } else {\n    //Retrocediendo\n    let nuevaCancion = cancionActual.id + i;\n    cancionActual.id = nuevaCancion;\n    if (cancionActual.id < 0) {\n      cancionActual.id = canciones.length - 1;\n    }\n    cancionActual.cancion = canciones[cancionActual.id];\n  }\n};\n\nexport default () => {\n  return {\n    ...createStore(reducers),\n  };\n};\n\nexport { getCancion };\nexport { setCancion };\nexport { getCanciones };\nexport { setCanciones };\nexport { getGeneros };\nexport { setGeneros };\nexport { getCancionActual };\nexport { setCancionActual };\n","import \"./reproductor.css\";\nimport React from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport * as store from \"../../redux/store\";\nexport class Reproducir extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isPlaying: false,\n      duration: 0,\n      durationFinal: \"Cargando\",\n      cancion: null,\n      cache: Math.round(1000000 * Math.random()),\n    };\n  }\n\n  componentWillMount() {\n    this.setState({ cancion: this.getCancion() });\n  }\n  componentDidMount() {\n    if (this.getCancion()) {\n      let audio = document.querySelector(\"#cancion\");\n      audio.addEventListener(\"loadedmetadata\", (e) => {\n        this.setState({ durationFinal: e.target.duration.toFixed(1) });\n        this.play();\n      });\n    }\n  }\n\n  getCancion = () => {\n    return store.getCancion();\n  };\n\n  getTime = (event) => {\n    this.setState({ duration: event.target.currentTime.toFixed(1) });\n    if (event.target.currentTime.toFixed(1) === this.state.durationFinal) {\n      this.pause();\n      store.setCancionActual(1);\n      this.setCancion();\n      this.play();\n    }\n  };\n\n  update = (event) => {\n    this.pause();\n    this.setState({ duration: event.target.value });\n    const audio = document.querySelector(\"#cancion\");\n    audio.currentTime = event.target.value;\n    audio.play();\n    this.setState({ isPlaying: true });\n  };\n\n  play = () => {\n    this.setState({ isPlaying: true });\n    const audio = document.querySelector(\"#cancion\");\n    audio.play();\n  };\n  pause = () => {\n    this.setState({ isPlaying: false });\n    const audio = document.querySelector(\"#cancion\");\n    audio.pause();\n  };\n\n  getCancionActual = () => {\n    return store.getCancionActual();\n  };\n\n  setCancion = () => {\n    this.setState({ cache: Math.round(1000000 * Math.random()) });\n    let cancion = store.getCancionActual();\n    this.setState({ cancion: cancion.cancion });\n    let audio = document.querySelector(\"#cancion\");\n    audio.addEventListener(\"loadedmetadata\", (e) => {\n      this.setState({ durationFinal: e.target.duration.toFixed(1) });\n      this.play();\n    });\n  };\n\n  render() {\n    if (!this.state.cancion) {\n      return <Redirect to=\"/home\" />;\n    }\n\n    return (\n      <div>\n        <div className=\"header\">\n          <Link to=\"/\">\n            <div>\n              <span className=\"material-icons light\">keyboard_backspace</span>\n            </div>\n          </Link>\n          <div className=\"title\">\n            {this.state.cancion.title.slice(0, 25)}...\n          </div>\n          <div className=\"c\">\n            <span className=\"material-icons\">keyboard_backspace</span>\n          </div>\n        </div>\n        <div className=\"repr\">\n          <div className=\"datos\">\n            <div className=\"divCancion\">\n              <img\n                className={`${this.state.isPlaying} imgCancion`}\n                id=\"conservaPos\"\n                src={this.state.cancion.album.cover_big}\n                alt=\"Cancion\"\n              />\n            </div>\n\n            <audio\n              onTimeUpdate={this.getTime}\n              src={`https://apideezer.herokuapp.com/?url=${this.state.cancion.preview.replace(\n                \"https\",\n                \"http\"\n              )}&nocache=${this.state.cache}`}\n              controls\n              id=\"cancion\"\n              hidden\n            >\n              <p>Tu navegador no implementa el elemento audio.</p>\n            </audio>\n            <div className=\"title\">\n              <h3>{this.state.cancion.title}</h3>\n              <small>{this.state.cancion.artist.name} </small>\n            </div>\n            <br />\n            <div className=\"slidecontainer\">\n              <input\n                type=\"range\"\n                min=\"0\"\n                max={this.state.durationFinal}\n                value={this.state.duration}\n                onChange={this.update}\n                className=\"slider\"\n              ></input>\n            </div>\n            <div id=\"currentDuration\">\n              <small>{Math.trunc(this.state.duration)} s</small>\n            </div>\n            <div id=\"finalDuration\">\n              <small>{Math.trunc(this.state.durationFinal)} s</small>\n            </div>\n            <div className=\"controls\">\n              <div\n                className=\"previous\"\n                onClick={() => {\n                  store.setCancionActual(-1);\n                  this.setCancion();\n                }}\n              >\n                <span className=\"material-icons repic light\">\n                  skip_previous\n                </span>\n              </div>\n              <div className=\"playa\">\n                {!this.state.isPlaying && (\n                  <span\n                    className=\"material-icons repic light\"\n                    onClick={this.play}\n                  >\n                    play_arrow\n                  </span>\n                )}\n                {this.state.isPlaying && (\n                  <span\n                    className=\"material-icons repic light\"\n                    onClick={this.pause}\n                  >\n                    pause\n                  </span>\n                )}\n              </div>\n              <div\n                className=\"next\"\n                onClick={() => {\n                  store.setCancionActual(1);\n                  this.setCancion();\n                }}\n              >\n                <span className=\"material-icons repic light\">skip_next</span>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"imgBlur\">\n          <img src={this.state.cancion.album.cover_big} alt=\"Background\" />\n        </div>\n      </div>\n    );\n  }\n}\n","import \"./artista.css\";\n\nimport React from \"react\";\n\nexport class Artista extends React.Component {\n  render() {\n    return (\n      <div className=\"swiper-slide\">\n        <p>{this.props.name.slice(0, 11)}</p>\n        <div className=\"imagenGenero swiper-slide2\">\n          <img src={this.props.img} alt=\"Artista\" />\n        </div>\n      </div>\n    );\n  }\n}\n","import \"./cancionFav.css\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport * as store from \"../../redux/store\";\nexport class Cancion extends React.Component {\n  setCancion = (url) => {\n    store.setCancion(url);\n  };\n  cancion = this.props.data;\n  id = this.props.id;\n\n  render() {\n    return (\n      <Link to={`/cancion/`}>\n        <div\n          className=\"container\"\n          onClick={() => {\n            this.setCancion({ id: this.id, cancion: this.cancion });\n          }}\n        >\n          <div className=\"left\">\n            <div className=\"imgSong\">\n              <img src={this.props.data.album.cover_medium} alt=\"background\" />\n            </div>\n            <div className=\"description\">\n              <h4>{this.props.data.title}</h4>\n              <h5 className=\"gris\">{this.props.data.artist.name}</h5>\n            </div>\n          </div>\n          <div className=\"play\">\n            <span className=\"material-icons\">play_arrow</span>\n          </div>\n        </div>\n      </Link>\n    );\n  }\n}\n","import React from \"react\";\nimport { Artista } from \"../../components/artista/artista.js\";\nimport { Cancion } from \"../../components/cancionFav/cancionFav.js\";\nimport Swiper from \"react-id-swiper\";\nimport * as store from \"../../redux/store\";\n\nconst urlCat = \"http://api.deezer.com/genre/\";\nexport class Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      categorias: [],\n      canciones: [],\n    };\n  }\n\n  componentDidMount() {\n    if (store.getGeneros() && store.getCanciones()) {\n      this.setState(() => {\n        return {\n          categorias: store.getGeneros(),\n          canciones: store.getCanciones(),\n        };\n      });\n    } else {\n      fetch(\"https://apideezer.herokuapp.com/cors?url=\" + urlCat)\n        .then((response) => {\n          return response.json();\n        })\n        .then((categorias) => {\n          store.setGeneros(categorias.data);\n          this.setState(() => {\n            return { categorias: categorias.data };\n          });\n\n          fetch(\n            \"https://apideezer.herokuapp.com/cors?url=\" +\n              `http://api.deezer.com/chart`\n          )\n            .then((res) => {\n              return res.json();\n            })\n            .then((canciones) => {\n              console.log(canciones.tracks);\n              store.setCanciones(canciones.tracks.data);\n              this.setState(() => {\n                return { canciones: canciones.tracks.data };\n              });\n            })\n            .catch((err) => {\n              alert(err);\n            });\n        })\n        .catch((err) => {\n          alert(err);\n        });\n    }\n\n    let buscador = document.querySelector(\"#buscador\");\n    buscador.onkeyup = (event) => {\n      const keycode = event.keyCode;\n      if (keycode === 13) {\n        this.search(buscador.value);\n      }\n    };\n  }\n\n  search(value) {\n    let buscador = document.querySelector(\"#buscador\");\n    buscador.blur();\n    let resultados = document.querySelector(\"#resultados\");\n    window.scroll(0, resultados.getBoundingClientRect().top);\n    this.setState(() => {\n      return { canciones: [] };\n    });\n    fetch(\n      \"https://apideezer.herokuapp.com/cors?url=\" +\n        `http://api.deezer.com/search?q=${value}`\n    )\n      .then((res) => {\n        return res.json();\n      })\n      .then((canciones) => {\n        store.setCanciones(canciones.data);\n        this.setState(() => {\n          return { canciones: canciones.data };\n        });\n      })\n      .catch((err) => {\n        alert(err);\n      });\n  }\n\n  render() {\n    const params = {\n      slidesPerView: 2.5,\n      spaceBetween: 20,\n      freeMode: true,\n      loop: true,\n      auto: true,\n      breakpoints: {\n        320: {\n          slidesPerView: 2.5,\n        },\n        600: {\n          slidesPerView: 5.5,\n        },\n        1000: {\n          slidesPerView: 7.5,\n        },\n      },\n    };\n    let artistas = this.state.categorias.map((el, i) => (\n      <Artista id={el.id} name={el.name} key={i} img={el.picture_medium} />\n    ));\n    let canciones = this.state.canciones.map((el, i) => (\n      <Cancion data={el} key={i} id={i} />\n    ));\n    return (\n      <div className=\"fondo\">\n        <div className=\"content\">\n          <div id=\"buscar\">\n            <span className=\"material-icons search\">search</span>\n            <input\n              type=\"text\"\n              id=\"buscador\"\n              autoComplete=\"off\"\n              placeholder=\"Busca aquí...\"\n            ></input>\n          </div>\n\n          <h1>Bienvenido,</h1>\n          <h4>Buenos dias!</h4>\n          <br />\n          <br />\n          {artistas.length > 0 && <Swiper {...params}>{artistas}</Swiper>}\n          {this.state.categorias.length === 0 && (\n            <div className=\"loader2\">Loading...</div>\n          )}\n\n          <br />\n          <h2 id=\"resultados\">Resultados</h2>\n          <br />\n          {this.state.canciones.length === 0 && (\n            <div className=\"loader2\">Loading...</div>\n          )}\n          {canciones.length > 0 && canciones}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Reproducir } from \"./pages/reproductor/reproductor.js\";\nimport { Switch, Route, HashRouter } from \"react-router-dom\";\nimport \"./App.css\";\n// Version <= 2.3.2\nimport { Home } from \"./pages/home/home.js\";\nfunction App() {\n  return (\n    <HashRouter>\n      <div>\n        <Switch>\n          <Route path=\"/cancion/\" component={Reproducir}></Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/home\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport storeF from \"./redux/store\";\n\nconst store = storeF();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}