{"version":3,"sources":["redux/store/index.js","pages/reproductor/reproductor.js","components/artista/artista.js","components/cancionFav/cancionFav.js","pages/home/home.js","App.js","serviceWorker.js","index.js"],"names":["value","canciones","generos","cancionActual","reducers","setCancion","cancion","setCanciones","can","getGeneros","getCanciones","getCancionActual","setCancionActual","i","nuevaCancion","id","length","Reproducir","props","getCancion","getTime","event","setState","duration","target","currentTime","toFixed","state","durationFinal","pause","store","play","update","audio","document","querySelector","isPlaying","cache","Math","round","random","addEventListener","e","this","className","to","title","slice","src","album","cover_medium","onTimeUpdate","preview","replace","controls","hidden","artist","name","type","min","max","onChange","onClick","React","Component","Artista","funcion","img","Cancion","url","data","Home","categorias","fetch","then","response","json","gen","res","console","log","tracks","catch","err","alert","buscador","onkeyup","keyCode","search","blur","resultados","window","scroll","getBoundingClientRect","top","params","slidesPerView","spaceBetween","freeMode","loop","auto","artistas","map","el","key","picture_medium","autoComplete","App","path","component","Boolean","location","hostname","match","createStore","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.4c0ff815.chunk.js","sourcesContent":["import { createStore } from 'redux'\n\nlet value\nlet canciones\nlet generos\nlet cancionActual\n\nconst reducers = ()=>{\n    return {}\n}\nconst getCancion = ()=>{\n    return value\n}\nconst setCancion = (cancion)=>{\n    value = cancion.cancion\n    cancionActual = cancion\n}\n\nconst setCanciones = (can) => {\n    canciones = can\n}\n\nconst getGeneros = () =>{\n    return generos\n}\n\nconst setGeneros = (gen) => {\n    generos = gen\n}\n\nconst getCanciones = ()=>{\n    return canciones\n}\n\nconst getCancionActual = () => {\n    return cancionActual\n}\n\nconst setCancionActual = (i) => {\n    if(i>0){ //Avanzando\n        let nuevaCancion = cancionActual.id + i\n        if(nuevaCancion >= 0 && !(nuevaCancion == canciones.length)){\n            cancionActual.id = nuevaCancion\n            cancionActual.cancion = canciones[cancionActual.id]\n\n        }\n        if(nuevaCancion == canciones.length){\n            cancionActual.id = 0\n            cancionActual.cancion = canciones[cancionActual.id]\n        }\n    }else{ //Retrocediendo\n        let nuevaCancion = cancionActual.id + i\n        cancionActual.id = nuevaCancion\n        if(cancionActual.id < 0){\n            cancionActual.id = canciones.length-1\n        }\n        cancionActual.cancion = canciones[cancionActual.id]\n    }\n    \n}\n\n\nexport default() => {\n    return{\n        ...createStore(reducers),\n    }\n}\n\n\n\nexport {getCancion}\nexport {setCancion}\nexport {getCanciones}\nexport {setCanciones}\nexport {getGeneros}\nexport {setGeneros}\nexport {getCancionActual}\nexport {setCancionActual}","import './reproductor.css'\nimport React from 'react';\nimport {\n    Link,\n    Redirect\n} from \"react-router-dom\";\nimport * as store from '../../redux/store';\nexport class Reproducir extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isPlaying: false,\n            duration: 0,\n            durationFinal: 'Cargando',\n            cancion: null,\n            cache: Math.round(1000000*Math.random()) \n        }\n\n    }\n\n    componentWillMount() {\n        this.setState({cancion: this.getCancion()})\n    }\n    componentDidMount(){\n        if (this.getCancion()) {\n            \n            let audio = document.querySelector(\"#cancion\")\n            audio.addEventListener('loadedmetadata', (e) => {\n                this.setState({ durationFinal: (e.target.duration).toFixed(1) });\n                this.play()\n            })\n        }\n    }\n\n\n    getCancion = () => {\n        return store.getCancion()\n    }\n\n    getTime = (event) => {\n        this.setState({ duration: (event.target.currentTime).toFixed(1) })\n        if ((event.target.currentTime).toFixed(1) === this.state.durationFinal) {\n            this.pause()\n            store.setCancionActual(1)\n            this.setCancion()\n            this.play()\n        }\n    }\n\n    update = (event) => {\n        this.pause()\n        this.setState({ duration: event.target.value })\n        const audio = document.querySelector(\"#cancion\")\n        audio.currentTime = event.target.value\n        audio.play()\n        this.setState({ isPlaying: true })\n\n    }\n\n    play = () => {\n        this.setState({ isPlaying: true })\n        const audio = document.querySelector(\"#cancion\")\n        audio.play()\n    }\n    pause = () => {\n        this.setState({ isPlaying: false })\n        const audio = document.querySelector(\"#cancion\")\n        audio.pause()\n    }\n\n    getCancionActual = () => {\n        return store.getCancionActual()\n    }\n\n    setCancion = ()=>{\n        this.setState({ cache: Math.round(1000000*Math.random()) });\n        let cancion = store.getCancionActual()\n        this.setState({ cancion: cancion.cancion })\n        let audio = document.querySelector(\"#cancion\")\n            audio.addEventListener('loadedmetadata', (e) => {\n                this.setState({ durationFinal: (e.target.duration).toFixed(1) });\n                this.play()\n            })\n    }\n\n    \n\n    render() {\n        \n        if (!this.state.cancion) {\n            return <Redirect to=\"/home\" />;\n        }\n\n        \n        return (\n            <div>\n                <div className=\"header\">\n                    \n                    <Link to=\"/\">\n                        <div>\n                            <span className=\"material-icons light\">\n                                keyboard_backspace\n                            </span>\n                        </div>\n                    </Link>\n                    <div className=\"title\">\n                        {this.state.cancion.title.slice(0, 25)}...\n                    </div>\n                    <div className=\"c\">\n                        <span className=\"material-icons\">\n                            keyboard_backspace\n                    </span>\n                    </div>\n                </div>\n                <div className=\"repr\">\n                    <div className=\"datos\">\n                        <div className=\"divCancion\">\n                            <img className={`${this.state.isPlaying} imgCancion`} id=\"conservaPos\" src={this.state.cancion.album.cover_medium} />\n                        </div>\n\n                        <audio onTimeUpdate={this.getTime} src={`https://apideezer.herokuapp.com/?url=${this.state.cancion.preview.replace('https','http')}&nocache=${this.state.cache}`} controls id=\"cancion\" hidden>\n                            <p>Tu navegador no implementa el elemento audio.</p>\n                        </audio>\n                        <div className=\"title\">\n                            <h3>{this.state.cancion.title}</h3>\n                            <small>{this.state.cancion.artist.name} </small>\n                        </div>\n                        <br />\n                        <div className=\"slidecontainer\">\n                            <input type=\"range\" min=\"0\" max={this.state.durationFinal} value={this.state.duration} onChange={this.update} className=\"slider\"></input>\n                        </div>\n                        <div id=\"currentDuration\">\n                            <small>{this.state.duration} s</small>\n                        </div>\n                        <div id=\"finalDuration\">\n                            <small>{this.state.durationFinal} s</small>\n                        </div>\n                        <div className=\"controls\">\n                            <div className=\"previous\" onClick={()=> {store.setCancionActual(-1); this.setCancion()}}>\n                                <span className=\"material-icons repic light\">\n                                    skip_previous\n                                </span>\n                            </div>\n                            <div className=\"playa\">\n                                {\n                                    !this.state.isPlaying && (\n                                        <span className=\"material-icons repic light\" onClick={this.play}>\n                                            play_arrow\n                                        </span>\n                                    )\n                                }\n                                {\n                                    this.state.isPlaying && (\n                                        <span className=\"material-icons repic light\" onClick={this.pause}>\n                                            pause\n                                        </span>\n                                    )\n                                }\n\n                            </div>\n                            <div className=\"next\" onClick={()=> {store.setCancionActual(1); this.setCancion()}}>\n                                <span className=\"material-icons repic light\">\n                                    skip_next\n                                </span>\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n                <div className=\"imgBlur\">\n                    <img src={this.state.cancion.album.cover_medium}/>\n                </div>\n\n            </div>\n\n\n        );\n    }\n}\n","import './artista.css'\n\nimport React from 'react';\n\nexport class Artista extends React.Component {\n    render() {\n        return (\n\n            <div className=\"swiper-slide\" onClick={this.props.funcion}>\n                <p>{this.props.name.slice(0, 11)}</p>\n                <div className=\"imagenGenero swiper-slide2\">\n                    <img src={this.props.img}/>\n                </div>\n            </div>\n        );\n    }\n}\n","import './cancionFav.css'\nimport React from 'react';\nimport {\n    Link\n} from \"react-router-dom\";\nimport * as store from '../../redux/store'\nexport class Cancion extends React.Component {\n    \n    setCancion = (url)=>{\n        store.setCancion(url)\n    }\n    cancion = this.props.data\n    id = this.props.id\n    \n    render() {\n        return (\n            <Link to={`/cancion/`}>\n                <div className=\"container\" onClick={()=>{this.setCancion({id: this.id,cancion: this.cancion})}}>\n                    <div className=\"imgSong\">\n                        <img src={this.props.data.album.cover_medium} />\n                    </div>\n                    <div className=\"description\">\n                        <h4>{this.props.data.title}</h4>\n                        <h5 className=\"gris\">{this.props.data.artist.name}</h5>\n                    </div>\n                    <div className=\"play\">\n                        <span className=\"material-icons\">\n                            play_arrow\n                        </span>\n                    </div>\n                </div>\n            </Link>\n\n        );\n    }\n}\n","import React from 'react';\nimport { Artista } from '../../components/artista/artista.js'\nimport { Cancion } from '../../components/cancionFav/cancionFav.js'\nimport Swiper from 'react-id-swiper'\nimport * as store from '../../redux/store';\n\n\nconst urlCat = \"http://api.deezer.com/genre/\"\nexport class Home extends React.Component {\n\n    constructor(props) {\n\n        super(props)\n        this.state = {\n            categorias: [],\n            canciones: []\n        }\n\n    }\n\n\n    componentDidMount() {\n\n        if (store.getGeneros() && store.getCanciones()) {\n            this.setState((state) => { return { categorias: store.getGeneros(), canciones: store.getCanciones() } })\n        } else {\n\n            fetch('https://apideezer.herokuapp.com/cors?url=' + urlCat)\n                .then((response) => {\n                    return response.json()\n                })\n                .then((categorias) => {\n                    store.setGeneros(categorias.data)\n                    this.setState((state) => { return { categorias: categorias.data } })\n\n                    fetch('https://apideezer.herokuapp.com/cors?url=' + `http://api.deezer.com/chart`).then(res => {\n                        return res.json()\n                    }).then(canciones => {\n                        console.log(canciones.tracks)\n                        store.setCanciones(canciones.tracks.data)\n                        this.setState((state) => { return { canciones: canciones.tracks.data} })\n\n                    }).catch(err => {\n                        alert(err)\n                    })\n                }).catch(err => {\n                    alert(err)\n                })\n        }\n\n\n\n        let buscador = document.querySelector(\"#buscador\")\n        buscador.onkeyup = (event) => {\n            var keycode = event.keyCode;\n            if (keycode == '13') {\n                this.search(buscador.value)\n            }\n        }\n\n\n    }\n\n    search(value) {\n        let buscador = document.querySelector(\"#buscador\")\n        buscador.blur()\n        let resultados = document.querySelector(\"#resultados\")\n        window.scroll(0, resultados.getBoundingClientRect().top)\n        this.setState((state) => { return { canciones: [] } })\n        fetch('https://apideezer.herokuapp.com/cors?url=' + `http://api.deezer.com/search?q=${value}`).then(res => {\n            return res.json()\n        }).then(canciones => {\n            store.setCanciones(canciones.data)\n            this.setState((state) => { return { canciones: canciones.data } })\n\n        }).catch(err => {\n            alert(err)\n        })\n    }\n\n    render() {\n\n        const params = {\n            slidesPerView: 2.5,\n            spaceBetween: 20,\n            freeMode: true,\n            loop: true,\n            auto: true\n        }\n        let artistas = this.state.categorias.map((el, i) =>\n            <Artista id={el.id} name={el.name} key={i} img={el.picture_medium} funcion={()=>{this.search(el.name)}} />\n        )\n        let canciones = this.state.canciones.map((el, i) =>\n            <Cancion data={el} key={i} id={i} />\n        )\n        return (\n            <div className=\"fondo\">\n                <div className=\"content\">\n                    <div id=\"buscar\">\n                        <span className=\"material-icons search\">\n                            search\n                    </span>\n                        <input type=\"text\" id=\"buscador\" autoComplete=\"off\"></input>\n                    </div>\n\n                    <h1>\n                        Bienvenido,\n                    </h1>\n                    <h4>\n                        Buenos dias!\n                    </h4>\n                    <br />\n                    <br />\n                    {artistas.length > 0 && (\n                        <Swiper {...params}>\n                            {\n                                artistas\n                            }\n                        </Swiper>\n                    )}\n                    {this.state.categorias.length == 0 && (\n                        <div className=\"loader2\">Loading...</div>\n                    )}\n\n\n                    <br />\n                    <h2 id=\"resultados\">Resultados</h2>\n                    <br />\n                    {this.state.canciones.length == 0 && (\n                        <div className=\"loader2\">Loading...</div>\n                    )}\n                    {canciones.length > 0 && (\n                        canciones\n                    )}\n                </div>\n            </div>\n        )\n\n    }\n}\n","import React from 'react';\nimport { Reproducir } from './pages/reproductor/reproductor.js'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  HashRouter\n} from \"react-router-dom\";\nimport './App.css';\n// Version <= 2.3.2\nimport { Home } from './pages/home/home.js'\nfunction App() {\n  return (\n    <HashRouter>\n      <div>\n        <Switch>\n          <Route path=\"/cancion/\" component={Reproducir}>\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/home\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport storeF from './redux/store'\n\n\nconst store = storeF()\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}